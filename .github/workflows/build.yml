name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - '*'
permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: fitiz-gke
  GKE_ZONE: europe-west10
  IMAGE_DEV: user-service-image-dev
  IMAGE_STG: user-service-image-stg
  IMAGE_PROD: user-service-image-prod
  IMAGE_TAG: 0.0.1
  GAR_ZONE: europe-west10
  GAR_REPO: fitiz

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run Tests with Gradle
        run: ./gradlew test
  sonar:
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
  build:
    needs: sonar
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew bootJar
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: build/libs/*.jar
  setup-build-publish-deploy-dev:
    needs: build
    name: Deploy Dev
    runs-on: ubuntu-latest
    environment: development
    if: github.ref == 'refs/heads/development' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      - name: Configure docker
        run: gcloud auth configure-docker $GAR_ZONE-docker.pkg.dev
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Build
        run: |
          docker build \
            --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_DEV:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      - name: Publish
        run: |-
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_DEV:$IMAGE_TAG"
      - name: Deploy
        run: |-
          cd deployment/overlays/dev
          kubectl apply -k .
          kubectl get all
  setup-build-publish-deploy-stg:
    needs: build
    name: Deploy Stg
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      - name: Configure docker
        run: gcloud auth configure-docker $GAR_ZONE-docker.pkg.dev
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Build
        run: |
          docker build \
            --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_STG:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      - name: Publish
        run: |-
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_STG:$IMAGE_TAG"
      - name: Deploy
        run: |-
          cd deployment/overlays/stg
          kubectl apply -k .
          kubectl get all